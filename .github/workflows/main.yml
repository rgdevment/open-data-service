name: Build CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  ci:
    name: Lint, Test & Check Format
    runs-on: ubuntu-latest
    steps:
      # Step 1: Use our reusable setup action
      - name: Setup Environment
        uses: ./.github/actions/pnpm-setup

      # Step 2: Set SHAs for Nx Affected
      - name: Set Nx SHAs
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "NX_BASE=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV
            echo "NX_HEAD=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          else
            echo "NX_BASE=${{ github.event.before }}" >> $GITHUB_ENV
            echo "NX_HEAD=${{ github.event.after }}" >> $GITHUB_ENV
          fi

      # Step 3: Run affected commands
      - name: Check Format
        run: npx nx affected --target=format:check

      - name: Lint Affected Projects
        run: npx nx affected --target=lint

      - name: Test Affected Projects
        run: npx nx affected --target=test --coverage

  sonarcloud:
    name: SonarCloud Scan
    needs: ci
    runs-on: ubuntu-latest
    steps:
      # Step 1: Use our reusable setup action
      - name: Setup Environment
        uses: ./.github/actions/pnpm-setup

      # Step 2: Run tests on all projects to get full coverage report
      - name: Run Tests with Coverage on All Projects
        run: npx nx run-many --target=test --coverage

      # Step 3: Run SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v5
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_KEY_RC }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_RC }}
